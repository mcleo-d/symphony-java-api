swagger: '2.0'
info:
  version: '1.51.0'
  title: Login API
  description: |
    For bots and other on-premise processes to authenticate. Once
    authenticated, the bot will be able to use the methods described in
    serviceAPI.yaml and agentAPI.yaml.

    Authentication requests will expect the user to pass a token containing
    user identification information and signed by the user's private key

    There will be two implementations of this API, one on your Pod
    and one on the Key Manager. In order to fully authenticate,
    an API client will have to call both of these implementations
    and pass both of the session tokens returned as headers in all
    subsequent requests to the Symphony API.
paths:
  '/pubkey/authenticate':
    post:
      summary: Authenticate with public key
      description: |
        Based on an authentication request token signed by the caller's RSA priate key,
        authenticate the API caller and return a session token.

        A HTTP 401 Unauthorized error is returned on errors during authentication (e.g. invalid user,
        malformed authentication token, user's public key not imported in the pod, invalid token signature etc.).
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: authenticateRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/AuthenticateRequest'
      tags:
        - Authentication
      responses:
        '200':
          description: OK.
          schema:
            $ref: '#/definitions/Token'
        '401':
          description: 'Client is unauthorized to access this resource'
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: 'Forbidden to access this endpoint .'
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: 'Server error, see response body for further details.'
          schema:
            $ref: '#/definitions/Error'
definitions:
  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
  Token:
    type: object
    properties:
      name:
        description: |
          The name of the header in which the token should be presented on subsequent
          API calls.
        type: string
      token:
        type: string
        description: |
          The token which should be passed. This should be considered opaque data by
          the client. It is not intended to conatain any data interpretable by the
          client. The format is secret and subject to change without notice.
  AuthenticateRequest:
      type: object
      description: Request body for pubkey authentication
      properties:
        token:
          type: string
          description: a JWT containing the caller's username and an expiration date, signed by the caller's private key.

